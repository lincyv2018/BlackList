worker_processes auto; # Defines number of worker processes based on auto-detected number of CPU cores (default is 1 worker)
load_module modules/ngx_http_subs_filter_module.so; # Loads dynamic ngx_http_substitutions_filter_module for string substitution on response bodies https://github.com/yaoweibin/ngx_http_substitutions_filter_module

worker_rlimit_nofile 65535; # Changes the limit on the maximum number of open files

events {
	use epoll; # More efficient I/O event notification method
	worker_connections 16380; # Maximum number of connections each nginx worker can deal with at once - this includes client connections and backend connections
	multi_accept on; # Allow multiple connections per worker
}

http {

	include enabled-sites/*.conf;  # Includes site configs for each domain
	include includes/upstreams.conf; # This file contains the configuration for the backend servers across all domains

	# Server SSL config adapted from Mozilla intermediate profile (https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28default.29)
	ssl_session_timeout 60m; # Use typical session length to cache SSL session
	ssl_session_cache shared:SSL:25m; # 1MB can store ~4,000 sessions = ~100,000 sessions in cache
	ssl_session_tickets off; # Instead of having to rotate session keys with manual rotation mechanism, disable session tickets

	ssl_certificate	cert/2018-StarDotAlamyDotComPlusIntlSAN_cert.pem; # Trusted SSL for www.alamy.com|de|es|fr|it|pt|uk
	ssl_certificate_key	cert/2018-StarDotAlamyDotComPlusIntlSAN_private.key;

	ssl_dhparam cert/dhparam.pem; # 2048 bits Diffie-Hellman parameter for DHE ciphersuites

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
	ssl_prefer_server_ciphers on;

	keepalive_timeout 180s; # Recommended increased values as per Nginx webinar - Idle keepalive connection to client kept open for 3 mins (default 75 secs)
	keepalive_requests 10000; # Number of requests allowed over a single keepalive connection (default 100)

	map_hash_bucket_size 10240; # Increased hash bucket size for all mapped variables
	map_hash_max_size 20480;

	# Server cache config
	proxy_cache_path /tmp/cache levels=1:2 keys_zone=alamyweb_cache:10m inactive=60m max_size=5120m purger=on; # Defines cache on local host
	proxy_cache_key "$scheme$host$request_uri"; # Include requested host in cache key so that requests for separate domains have separate cache
	include includes/ipsets/purge-allow; # Denies responding to PURGE requests by default, allows internal IP addresses only

	# Server proxy config
	proxy_redirect http://$host:$server_port $scheme://$host; # Fixes IIS redirect mismatches between https client and http backend
	proxy_http_version 1.1; # Allows keepalive connections to upstream servers
	proxy_set_header Connection ""; # Required for keepalive connections to upstream servers (overwrites default Connection header which is "Close")
	proxy_buffers 4 256k; # Increased buffer sizes to allow long request URIs
	proxy_buffer_size 128k;
	proxy_busy_buffers_size 256k;
	
	# Server header config
	# Map scheme of connection to variable used to set Host header in similar fashion to TMG (https includes server port, http does not)
	map $scheme $host_header_like_TMG {
		http	$host;
		https	$host:$server_port;
	}
	proxy_set_header Host $host_header_like_TMG;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Puts the client ip in the header so it can be logged
	proxy_pass_header Server; # Pass Server header from backend servers

	# Server rate limit config (Doubled to 3600r/m and 12000r/m for migration of .com site - to be reduced at later date)
	include includes/ipsets/rate-limit-exception; # Maps the binary representation of the connecting IP to a default rate limit or an exempted rate limit
	include includes/useragent-rate-limit.conf; # Maps useragent to $bot_rate_limit variable to limit Googlebot traffic

	limit_req_zone $default_rate_limit zone=http_req_limit:10m rate=3600r/m; # Default rate limit for 1800 requests/minute. Using 10MB of RAM - enough for 81,920 IP addresses
	limit_req_zone $bot_rate_limit zone=http_req_limit_bot:10m rate=30000r/m; # Rate limit requests from Googlebot
	limit_req_zone $binary_remote_addr zone=http_req_limit_exceptions:1m rate=12000r/m; # Rate limit for IPs exempt from default rate

	limit_req_status 429; # 'Too many requests' response for requests over rate limit

	# User agent configs
	include includes/useragent-upstream.conf; # Route traffic to backend cluster based on user-agent 
	include includes/useragent-block.conf; # Blackhole requests from specific user-agent

	# Server compression config
	gzip on; # Enable compression of proxied content by Nginx
	gzip_disable "msie6"; # Don't compress for early version of IE
	gzip_min_length 1000; # Don't compress anything smaller than 1kB
	gzip_proxied any; # Compress data for clients connecting via a proxy
	gzip_comp_level 2; # Compression level balanced between performance and filesize reduction
	gzip_types text/css text/iuls text/plain text/richtext text/x-component text/x-setext text/x-vcard text/webviewhtml text/scriptlet application/fractals application/futuresplash application/hta application/internet-property-stream application/mac-binhex40 application/octet-stream application/oda application/oleobject application/olescript application/pics-rules application/pkcs10 application/pkcs7-mime application/pkcs7-signature application/pkix-crl application/set-payment-initiation application/set-registration-initiation application/vndms-pkicertstore application/vndms-pkipko application/vndms-pkiseccat application/vndms-pkistl application/x-bcpio application/x-cdf application/x-cpio application/x-csh application/x-director application/x-dvi application/x-hdf application/x-internet-signup application/x-iphone application/x-javascript application/x-latex application/x-msdownload application/x-msmediaview application/x-mspublisher application/x-msschedule application/x-netcdf application/x-pkcs12 application/x-pkcs7-certificates application/x-pkcs7-certreqresp application/x-sh application/x-shar application/x-stuffit application/x-sv4cpio application/x-sv4crc application/x-tcl application/x-tex application/x-texinfo application/x-troff application/x-troff-man application/x-troff-me application/x-troff-ms application/x-ustar application/x-wais-source application/x-x509-ca-cert; # text/html always compressed, including explicitly gives [warn] message in nginx logs

	client_body_buffer_size 25M; # RAM dedicated to buffer for reading client request body. Translates to max upload size before nginx caches to disk instead of RAM.
	server_tokens off; # Remove Nginx identifying version string
	resolver 172.17.0.90 172.17.0.91; # Using tcsvrdc05 and tcsvrdc06 for DNS resolution

	log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$host" sn="$server_name" rt=$request_time ua="$upstream_addr" us="$upstream_status" ut="$upstream_response_time" ul="$upstream_response_length" cs=$upstream_cache_status $scheme $request_method h2=$http2'; # Log format for Amplify to collect data, Alamy extras on the end
	access_log /var/log/nginx/access.log main_ext;

	error_log /var/log/nginx/error.log notice; # Include all error logs from 'notice' level and above
	
	match web_server_ok { # Active health check - Defines a healthy response for web_servers group
		status 200;
	}

	match crm_server_ok { # Defines a healthy response for crm_servers group
		status 200;
	}

	match search_server_ok { # Defines a healthy response for search_servers group
		status 200;
	}

	match download_server_ok { # Defines a healthy response for download_servers group
		status 200;
	}

}
