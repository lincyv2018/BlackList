server {

	listen 8080 ssl http2;
	server_name tcgwvip01.alamy.com;

	root /usr/share/nginx/html;

	include includes/ipsets/internal-networks; # Permit access from internal network IP ranges only
	allow 127.0.0.1; # Allow localhost to dashboard
	deny all; # Deny by default
	access_log off; # Don't log access to the dashboard

	auth_basic on; # Enables HTTP basic authentication for Nginx Plus dashboard
	auth_basic_user_file .htpasswd; # Defines the htpasswd generated user file
	
	location = / { # Redirect requests for / to dashboard
		return 301 /dashboard.html;
	}

	location = /status.html { # Old dashboard requests redirected to new
		return 301 /dashboard.html;
	 }

	location = /dashboard.html { # New dashboard location
		root /usr/share/nginx/html;
	}

	location /api/ { # Enable write-enabled API access
		api write=on;
	}

	location @web_servers_default_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://web_servers_default;
		health_check mandatory interval=3 fails=3 passes=3 uri=/httpstest.aspx match=web_server_ok; # Triggers the active health check, the mandatory flag means the service is checked before it is made available
	}

	location @web_servers_bot_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://web_servers_bot;
		health_check mandatory interval=3 fails=3 passes=3 uri=/httpstest.aspx match=web_server_ok; # Triggers the active health check, the mandatory flag means the service is checked before it is made available
	}

	location @search_servers_default_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://search_servers_default;
		health_check mandatory interval=3 fails=3 passes=3 uri=/search.html match=search_server_ok; # Triggers the active health check, the uri flag specifies the relative path to run the check on
	}

	location @search_servers_bot_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://search_servers_bot;
		health_check mandatory interval=3 fails=3 passes=3 uri=/search.html match=search_server_ok; # Triggers the active health check, the uri flag specifies the relative path to run the check on
	}

	location @crm1_servers_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://crm1_servers;
		health_check mandatory interval=3 fails=3 passes=3 uri=/httpstest.aspx match=crm_server_ok; # Triggers the active health check, the mandatory flag means the service is checked before it is made available
	}

	location @crm2_servers_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://crm2_servers;
		health_check mandatory interval=3 fails=3 passes=3 uri=/httpstest.aspx match=crm_server_ok; # Triggers the active health check, the mandatory flag means the service is checked before it is made available
	}

	location @download_servers_healthcheck {
		internal;
		proxy_set_header Host tcgwvip01.alamy.com; # Must define the Host header to pass to backend server when health checking
		proxy_pass http://download_servers;
		health_check mandatory interval=3 fails=3 passes=3 uri=/downloads/check.aspx match=download_server_ok; # Triggers the active health check, the mandatory flag means the service is checked before it is made available
	}

}
